WHITESPACE = _{ " " | "\t" }

split = _{ NEWLINE+ | ";" ~ NEWLINE* }

line = _{ NEWLINE* }

ident = @{ (!("λ" | "σ") ~ LETTER | NUMBER | !("=" | "→") ~ SYMBOL)+ }
atom = { "(" ~ expr ~ ")" | ident }

pattern = { typed ~ "." ~ expr }
patterns = { "{"  ~ line ~ (pattern ~ split)+ ~ "}" | pattern }

lambda = { "λ" ~ patterns }
apply = { atom ~ atom+ }
typed = { atom ~ ":" ~ type_ }

expr = { lambda | apply | typed | atom }

tatom = { "(" ~ type_ ~ ")" | ident }

map = { tatom ~ ("→" ~ tatom)+ }

instance = { ident ~ ":" ~ type_ }
instances = { "{" ~ line ~ (instance ~ split)* ~ "}" | instance }

sum = { "σ" ~ instances }

type_ = { sum | map }

bind = { ident ~ "=" ~ (!"σ" ~ expr | type_) }


main = { SOI ~ line ~ (bind ~ split)* ~ EOI }
